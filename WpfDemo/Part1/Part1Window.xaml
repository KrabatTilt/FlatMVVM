<Window x:Class="WpfDemo.Part1.Part1Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfDemo.Part1"
        mc:Ignorable="d"
        Title="Simple Bindings" Height="450" Width="850"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance local:SimpleVM, IsDesignTimeCreatable=True}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <GroupBox x:Name="StaticBindings" Grid.Column="0" Header="Static Bindings" Padding="5">
            <StackPanel>

                <TextBlock TextWrapping="Wrap" Margin="2"
                           Text="Static bindings transfer data from a property in the ViewModel to the UI but not the other way around. In the ViewModel, those properties do not have a setter and therefore cannot raise a NotifyPropertyChanged event." />

                <Separator Margin="5" />
                <TextBlock Text="TextBinding:" FontWeight="Bold" Margin="5,0,0,5" />

                <!--Works with all modes on readonly properties-->
                <TextBlock Text="{Binding StaticText}" />

                <!--Works only with modes OneTime or OneWay on readonly properties-->
                <TextBox Text="{Binding StaticText, Mode=OneWay}" HorizontalAlignment="Left"/>

                <!--Works with all modes on readonly properties-->
                <Label Content="{Binding StaticText}" />

                <Separator Margin="5" />
                <TextBlock Text="ArrayBinding:" FontWeight="Bold" Margin="5,0,0,5" />

                <!--Can be any control that derives from ItemsControl. E.g. Selector, ListBox, ListView-->
                <ItemsControl ItemsSource="{Binding StaticTextArray}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <!--Triggers System.Windows.Data Error: 17 when index out of range-->
                <TextBlock Text="{Binding StaticTextArray[4]}" />

            </StackPanel>
        </GroupBox>

        <GroupBox x:Name="DynamicBindings" Grid.Column="1" Header="Dynamic Bindings">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Margin="2"
                           Text="Dynamic bindings transfer data from a property int the ViewModel to the UI and/or the other way around depending on the Binding-Mode you choose. In the ViewModel those Properties have a setter and a getter. In the setter they raise the NotifyPropertyChanged event to update value in UI. If raising the event is omitted, UI is not updated." />

                <Separator Margin="5" />
                <TextBlock Text="TextBinding:" FontWeight="Bold" Margin="5,0,0,5" />

                <!--Works with all modes-->
                <TextBlock Text="{Binding DynamicText1}" />

                <!--Works with all modes. USe UpdateSourceTrigger to change property on each character entered. -->
                <TextBox Text="{Binding DynamicText2,UpdateSourceTrigger=PropertyChanged, Delay=100}" HorizontalAlignment="Left"/>
                <TextBlock Text="{Binding DynamicText2}" />

            </StackPanel>
        </GroupBox>

    </Grid>
</Window>